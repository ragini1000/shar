from mcp.server.fastmcp import FastMCP
import requests
import json

# Create an MCP server
mcp = FastMCP("CurrencyRateFetcher")

# Method to call the currency rates API and filter specific currencies
def fetch_currency_rates(api_url):
    try:
        response = requests.get(api_url)
        response.raise_for_status()  # Raise an error for bad responses
        rates_data = response.json()
        
        # Specify the currencies to include
        desired_currencies = {"aed", "inr", "kwd", "jod", "chf", "eur", "gbp"}
        
        # Filter the desired currencies
        conversion_rates = {currency: rate for currency, rate in rates_data['usd'].items() if currency in desired_currencies}
        
        return {
            "base_code": "USD",
            "conversion_rates": conversion_rates
        }
    except requests.exceptions.RequestException as e:
        print(f"An error occurred: {e}")
        return {}

# Method to save currency rates to a JSON file
def save_rates_to_json_file(rates_data, filename):
    try:
        with open(filename, 'w') as file:
            json.dump(rates_data, file, indent=4)
        print(f"Rates saved to {filename}")
    except IOError as e:
        print(f"An error occurred while writing to the file: {e}")

# Define an MCP task
@mcp.tool()
def fetch_and_save_currency_rates():
    """Fetch specific currency rates and save them to a JSON file."""
    api_url = "https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@2025-06-06/v1/currencies/usd.json"
    currency_rates = fetch_currency_rates(api_url)
    save_rates_to_json_file(currency_rates, 'currency_rates.json')

# Run the MCP server
if __name__ == '__main__':
    mcp.run()
